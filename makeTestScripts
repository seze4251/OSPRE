#
#	 Makefile
#	 SantaCruzServer
#
#	 Created by Hilton Lipschitz on 2015-09-01.
#	 Copyright (c) 2015 Maritime Capital LP. All rights reserved.
#
#        Modified By Seth Zegelstein
#        Date Modified: 11/26/2016

# HIL: No spaces or comments after otherwise it captures them!
# Determine the platform
UNAME_S := $(shell uname -s)

# Folders
SRCDIR := src
BUILDDIR := build_test
TARGETDIR := bin_test

# Targets (12 executables)
#testByteBuffer
EXECUTABLE_testByteBuffer := testByteBuffer
TARGET_testByteBuffer := $(TARGETDIR)/$(EXECUTABLE_testByteBuffer)

#testCircularBuffer
EXECUTABLE_testCircularBuffer := testCircularBuffer
TARGET_testCircularBuffer := $(TARGETDIR)/$(EXECUTABLE_testCircularBuffer)

#testInternalBuilderParser
EXECUTABLE_testInternalBuilderParser := testInternalBuilderParser
TARGET_testInternalBuilderParser := $(TARGETDIR)/$(EXECUTABLE_testInternalBuilderParser)

#testExternalBuilderParser
EXECUTABLE_testExternalBuilderParser := testExternalBuilderParser
TARGET_testExternalBuilderParser := $(TARGETDIR)/$(EXECUTABLE_testExternalBuilderParser)

#testAnalyzeImage
EXECUTABLE_AnalyzeImage := testAnalyzeImage
TARGET_AnalyzeImage := $(TARGETDIR)/$(EXECUTABLE_AnalyzeImage)

#
# Main OBJS
MAINDIR := test
MAINOBJ_DIR := build_test

# Final Paths
#INSTALLBINDIR := /usr/local/bin

# Code Lists
SRCEXT := cpp
SOURCES := $(shell find $(SRCDIR) -type f -name *.$(SRCEXT))
OBJECTS := $(patsubst $(SRCDIR)/%,$(BUILDDIR)/%,$(SOURCES:.$(SRCEXT)=.o))

# Folder Lists
# Note: Intentionally excludes the root of the include folder so the lists are clean
INCDIRS := $(shell find include/**/* -name '*.h' -exec dirname {} \; | sort | uniq)
INCLIST := $(patsubst include/%,-I include/%,$(INCDIRS))
BUILDLIST := $(patsubst include/%,$(BUILDDIR)/%,$(INCDIRS))


# Shared Compiler Flags
CFLAGS := -c
INC := -I include $(INCLIST) -I /usr/local/include

# Compiler and Compiler Flags
CC := g++
CFLAGS += -std=gnu++11 # -fPIC

#testByteBuffer
$(TARGET_testByteBuffer): $(OBJECTS) $(MAINOBJ_DIR)/testByteBuffer.o
	@mkdir -p $(TARGETDIR);
	@echo "	 Linking $(TARGET_testByteBuffer)"; $(CC) $^ -o $(TARGET_testByteBuffer);

#testCircularBuffer
$(TARGET_testCircularBuffer): $(OBJECTS) $(MAINOBJ_DIR)/testCircularBuffer.o
	@mkdir -p $(TARGETDIR);
	@echo "	 Linking $(TARGET_testCircularBuffer)"; $(CC) $^ -o $(TARGET_testCircularBuffer);

#testExternalBuilder
$(TARGET_testExternalBuilderParser): $(OBJECTS) $(MAINOBJ_DIR)/testExternalBuilderParser.o
	@mkdir -p $(TARGETDIR);
	@echo "	 Linking $(TARGET_testExternalBuilderParser)"; $(CC) $^ -o $(TARGET_testExternalBuilderParser);

#testInternalBuilderParser
$(TARGET_testInternalBuilderParser): $(OBJECTS) $(MAINOBJ_DIR)/testInternalBuilderParser.o
	@mkdir -p $(TARGETDIR);
	@echo "	 Linking $(TARGET_testInternalBuilderParser)"; $(CC) $^ -o $(TARGET_testInternalBuilderParser);


#testAnalyzeImage
$(TARGET_AnalyzeImage):
	@mkdir -p $(TARGETDIR);
	@echo "	 Linking $(TARGET_AnalyzeImage)"; $(CC) -o $(TARGET_AnalyzeImage) test/testAnalyzeImage.cpp $(INC) -I./Image_Processing/analyzeImagePi ./lib/analyzeImage.lib -I/usr/local/include/ -L /usr/local/lib -lopencv_core -lopencv_highgui -lopencv_ml -lopencv_imgcodecs

$(BUILDDIR)/%.o: $(SRCDIR)/%.$(SRCEXT)
	@mkdir -p $(BUILDLIST);
	@echo "Compiling $<..."; $(CC) $(CFLAGS) $(INC) -c -o $@ $<;

# Need to have all dependencies mapped out for building 
$(MAINOBJ_DIR)/%.o: $(MAINDIR)/%.$(SRCEXT)
	@mkdir -p $(BUILDLIST);
	@echo "Compiling $<..."; $(CC) $(CFLAGS) $(INC) -c -o $@ $<;


clean:
	@echo "Cleaning .o Files ..."; rm -r $(BUILDDIR)/;

#install:
#	@echo "Installing $(EXECUTABLE)..."; cp $(TARGET) $(INSTALLBINDIR);
	
#distclean:
#	@echo "Removing $(EXECUTABLE)"; rm $(INSTALLBINDIR)/$(EXECUTABLE);

.PHONY: clean